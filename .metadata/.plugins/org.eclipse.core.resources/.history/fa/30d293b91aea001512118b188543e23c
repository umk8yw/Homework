package com.atraxo.homework10.Ex3;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class ChatServer {

	private static Map<Integer, PrintStream> streamList = new HashMap<>();
	private ServerSocket serverSocket;
	private ExecutorService executor = Executors.newCachedThreadPool();

	public ChatServer() {
		try {
			this.serverSocket = new ServerSocket(6543);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		ChatServer chatServer = new ChatServer();
		chatServer.run();
	}

	static void doBroadcast(Socket socket, int id) {
		System.out.println(socket);
		try (BufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream()))) {
			while (true) {				
				String receivedMessage = br.readLine();
				for(int i = 0; i<streamList.size(); i++)
					if(i != id)
					streamList.get(i).println(socket.getPort() + " >" + receivedMessage);
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	void run() {
		int id = 0;
		try { 
			while (true) {
				Socket socket = serverSocket.accept();
				streamList.put(id, new PrintStream(socket.getOutputStream()));
				executor.submit(() -> doBroadcast(socket, id));
				id++;
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
